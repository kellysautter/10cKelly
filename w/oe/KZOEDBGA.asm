	TITLE	C:\10C\w\oe\KZOEDBGA.CPP
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BB@NAAD@Magellan?5MSWHEEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06FPAF@MouseZ?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CLBL@MSWHEEL_ROLLMSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@DLPD@MSH_WHEELSUPPORT_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@ODOJ@MSH_SCROLL_LINES_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0DL@CDG@C?3?2lplr?2Microsoft?5Visual?5Studio?2@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02DILL@?$CFs?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?GetNextPtr@CSimpleList@@QBEPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNoTrackObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNoTrackObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CNoTrackObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	_zDumpStack
EXTRN	?AfxDumpStack@@YGXK@Z:NEAR			; AfxDumpStack
_TEXT	SEGMENT
_zDumpStack PROC NEAR

; 21   : {

	push	ebp
	mov	ebp, esp

; 22   : #if defined DEBUG
; 23   :    AfxDumpStack( AFX_STACK_DUMP_TARGET_TRACE );

	push	1
	call	?AfxDumpStack@@YGXK@Z			; AfxDumpStack

; 24   : #else
; 25   :    return;
; 26   : #endif
; 27   : }

	pop	ebp
	ret	0
_zDumpStack ENDP
_TEXT	ENDS
PUBLIC	_zDumpString
PUBLIC	??_C@_02DILL@?$CFs?$AA@				; `string'
EXTRN	?AfxTrace@@YAXPBDZZ:NEAR			; AfxTrace
;	COMDAT ??_C@_02DILL@?$CFs?$AA@
; File C:\10C\w\oe\KZOEDBGA.CPP
_DATA	SEGMENT
??_C@_02DILL@?$CFs?$AA@ DB '%s', 00H			; `string'
_DATA	ENDS
_TEXT	SEGMENT
_psz$ = 8
_zDumpString PROC NEAR

; 30   : {

	push	ebp
	mov	ebp, esp

; 31   :    TRACE0( psz );

	mov	eax, DWORD PTR _psz$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_02DILL@?$CFs?$AA@	; `string'
	call	?AfxTrace@@YAXPBDZZ			; AfxTrace
	add	esp, 8

; 32   : }

	pop	ebp
	ret	0
_zDumpString ENDP
_TEXT	ENDS
END
